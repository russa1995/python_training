{"name": "test_add_contact[None:nameB;%Q:headerX+EZ:footer+V   :namemJ 41= :header:f/l2\\|sc>tpH7IP J:footerT\\c7y~pw J{AE^?/3:namep\"Z:headerPV\\/E*>&X=aQv c \" :footerZ* j:name:headerAW<Yx!aZk|V+ <^Y:footer (}'L 3(P5|FiuW:$:namer\\da>:None:header8T:x* qI%`:None:None:None]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (5 + 1) == 5\n +  where 5 = len([123:test:None:lastname1:None:None:None:address1::::None::::None:None:None:None, 124:firstname2:None:lastname2:None:No...erM c>;;a` :name89 xy:None:footer:name::None:None:None:None, 127::None::None:None:None:::::None::::None:None:None:None])\n +  and   5 = <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x034E3F10>>()\n +    where <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x034E3F10>> = <fixture.contact.ContactHelper object at 0x034E3F10>.count\n +      where <fixture.contact.ContactHelper object at 0x034E3F10> = <fixture.application.Application object at 0x034F9118>.contact", "trace": "app = <fixture.application.Application object at 0x034F9118>\ndb = <fixture.db.DbFixture object at 0x03512148>\njson_contacts = None:nameB;%Q:headerX+EZ:footer+V   :namemJ 41= :header:f/l2\\|sc>tpH7IP J:footerT\\c7y~pw J{AE^?/3:namep\"Z:headerPV\\/E*>&X=aQv c \" :footerZ* j:name:headerAW<Yx!aZk|V+ <^Y:footer (}'L 3(P5|FiuW:$:namer\\da>:None:header8T:x* qI%`:None:None:None\ncheck_ui = False\n\n    def test_add_contact(app, db, json_contacts, check_ui):\n        contact = json_contacts\n        old_contacts = db.get_contact_list()\n        app.contact.create_new_contact(contact)\n>       assert len(old_contacts) + 1  == app.contact.count()\nE       assert (5 + 1) == 5\nE        +  where 5 = len([123:test:None:lastname1:None:None:None:address1::::None::::None:None:None:None, 124:firstname2:None:lastname2:None:No...erM c>;;a` :name89 xy:None:footer:name::None:None:None:None, 127::None::None:None:None:::::None::::None:None:None:None])\nE        +  and   5 = <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x034E3F10>>()\nE        +    where <bound method ContactHelper.count of <fixture.contact.ContactHelper object at 0x034E3F10>> = <fixture.contact.ContactHelper object at 0x034E3F10>.count\nE        +      where <fixture.contact.ContactHelper object at 0x034E3F10> = <fixture.application.Application object at 0x034F9118>.contact\n\ntest\\test_add_contact.py:10: AssertionError"}, "parameters": [{"name": "json_contacts", "value": "None:nameB;%Q:headerX+EZ:footer+V   :namemJ 41= :header:f/l2\\|sc>tpH7IP J:footerT\\c7y~pw J{AE^?/3:namep\"Z:headerPV\\/E*>&X=aQv c \" :footerZ* j:name:headerAW<Yx!aZk|V+ <^Y:footer (}'L 3(P5|FiuW:$:namer\\da>:None:header8T:x* qI%`:None:None:None"}], "start": 1596995316306, "stop": 1596995323319, "uuid": "13539ead-99b5-4a0e-bc5c-9463405b203d", "historyId": "655a13d790fcabacd065e669f917be27", "testCaseId": "d50430283b9a81430c4a119910d45520", "fullName": "test.test_add_contact#test_add_contact", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_contact"}, {"name": "host", "value": "RUSSA-PC"}, {"name": "thread", "value": "7540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_contact"}]}