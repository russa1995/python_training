{"name": "test_add_group[None:name  gw~8Z >:header'T EO:footers]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [75:New group... group::, ...] == [75:New group... group::, ...]\n  Left contains one more item: None:name  gw~8Z >:header'T EO:footers\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x033E2DA8>\ndb = <fixture.db.DbFixture object at 0x033DC148>\njson_groups = None:name  gw~8Z >:header'T EO:footers, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group=json_groups\n        with allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(\"When I add a group %s to the list\" % group):\n            app.group.group_create(group)\n        with allure.step(\"Then the new group list is equal to the old group list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [75:New group... group::, ...] == [75:New group... group::, ...]\nE             Left contains one more item: None:name  gw~8Z >:header'T EO:footers\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1596999452474, "stop": 1596999452477}, {"name": "When I add a group None:name  gw~8Z >:header'T EO:footers to the list", "status": "passed", "start": 1596999452477, "stop": 1596999455767}, {"name": "Then the new group list is equal to the old group list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [75:New group... group::, ...] == [75:New group... group::, ...]\n  Left contains one more item: None:name  gw~8Z >:header'T EO:footers\n  Use -v to get the full diff\n", "trace": "  File \"C:\\projects\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1596999455767, "stop": 1596999455775}], "parameters": [{"name": "json_groups", "value": "None:name  gw~8Z >:header'T EO:footers"}], "start": 1596999452470, "stop": 1596999455777, "uuid": "1726415c-d0e2-4265-9168-80a534d8ae42", "historyId": "d3257f55933085783dff4ef34a465e60", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "RUSSA-PC"}, {"name": "thread", "value": "10460-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}